plugins {
    id 'java'
}

def pluginVersion = '1.0.0-SNAPSHOT'

group = 'io.imadam'
version = pluginVersion
description = 'A Paper plugin for chat color gradients with PlaceholderAPI integration'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava {
    options.compilerArgs += ['-Xlint:deprecation']
}

repositories {
    mavenCentral()
    
    // Paper
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    
    // PlaceholderAPI
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    
    // CodeMC for AnvilGUI
    maven {
        name = 'codemc-repo'
        url = 'https://repo.codemc.org/repository/maven-public/'
    }
    
    // Sonatype for AnvilGUI snapshots
    maven {
        name = 'sonatype-snapshots'
        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    // Paper API
    compileOnly 'io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT'
    
    // PlaceholderAPI
    compileOnly 'me.clip:placeholderapi:2.11.6'
    
    // AnvilGUI for preset naming
    implementation 'net.wesjd:anvilgui:1.10.0-SNAPSHOT'
    
    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
    
    // For testing with Bukkit/Paper
    testImplementation 'io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

// Set encoding for compilation
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
